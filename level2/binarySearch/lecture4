////240. Search a 2D Matrix II
///Integers in each row are sorted in ascending from left to right.
////Integers in each column are sorted in ascending from top to bottom.

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
         int row = 0;
         int col = matrix[0].length-1;
         while(row<matrix.length && col>=0){
             if(matrix[row][col] == target){
                 return true;
             }else if(target<matrix[row][col]){
                 col--;
             }else{
                 row++;
             }
         }
         return false;
    }
}


//////74. Search a 2D Matrix
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int start = 0;
        int end = matrix.length*matrix[0].length-1;
        while(start<=end){
            int mid = start +(end-start)/2;
            int row = mid/matrix[0].length;
            int col  = mid%matrix[0].length;
            if(matrix[row][col] == target){
                return true;
            }else if(target< matrix[row][col]){
              end = mid-1;
            }else{
                start = mid+1;
            }
        }
        return false;
    }
}