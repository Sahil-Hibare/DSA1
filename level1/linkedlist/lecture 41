/////Add Last In Linked List


public class Main {
  public static class Node {
    int data;
    Node next;
  }

  public static class LinkedList {
    Node head;
    Node tail;
    int size;

    void addLast(int val) {
      // Write your code here
      Node temp=new Node();
      temp.data=val;
      if(size==0){
          head=temp;
          tail=temp;
      }else{
          tail.next=temp;
          tail=temp;
      }
      size++;
    }
  }


  //////Add First In Linked List

  public void addFirst(int val) {
    // write your code here
    Node temp=new Node();
    temp.data=val;
    temp.next=null;
    
    temp.next=head;
    head=temp;
    if(size==0){
        tail=temp;
    }
    size++;
  }


  //////Remove First In Linkedlist
  public void removeFirst(){
    // write your code here
    if(size==0){
        System.out.println("List is empty");
    }
    if(size>1){
        head=head.next;
        size--;
    }else{
        head=null;
        tail=null;
        size=0;
    }
   
  }


  ///Display A Linkedlist
  public void display(){
    // write code here
    if(size==0){
        return;
    }
    Node temp=head;
    while(temp!=null){
        System.out.print(temp.data+" ");
        temp=temp.next;
    }
    System.out.println();
  }

  ///get function
  public int getFirst(){
    // write your code here
    if(head==null){
        System.out.println("List is empty");
        return -1;
    }
    else{
        return head.data;
    }
  }

  public int getLast(){
    // write your code here
    if(tail==null){
        System.out.println("List is empty");
        return -1;
    }else{
        return tail.data;
    }
  }

  public int getAt(int idx){
    // write your code here
    if(idx<0 ||idx>=size){
        System.out.println("Invalid arguments");
        return -1;
    }
   else if(head==null){
        System.out.println("List is empty");
        return -1;
    }else{
        Node temp=head;
        while(idx!=0){
            temp=temp.next;
            idx--;
        }
        return temp.data;
    }



    ////Remove Last In Linked List
    public void removeLast(){
        // write your code here
        if(size==0){
            System.out.println("List is empty");
            
        }else if(size==1){
            head=null;
            tail=null;
            size--;
        }else{
           Node temp=head;
           while(temp.next!=tail){
            temp=temp.next;
           }
           temp.next=null;
           tail=temp;
           size--;
        }
      }